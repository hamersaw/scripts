#!/bin/bash

version="0.1.0"
usage="USAGE: $(basename $0) COMMAND
COMMAND:
    apply <theme>   update application(s) with the specified theme
    help            display this help menu
    list            display registered theme(s)
    validate        ensure correctness of configuration
    version         display the applications version"

[ -z "$dyedir" ] && dyedir="$HOME/.config/dye"
appdir="$dyedir/applications"
themedir="$dyedir/themes"

# TODO hamersaw - more precise color regex
colorregex="[a-fA-F0-9]*"

# execute command
case "$1" in
    apply)
        # validate arguments
        (( $# != 2 )) && echo "'$1' requires one argument" && exit 1

        [ ! -f "$themedir/$2" ] && echo "theme '$2' does not exist" && exit 1

        source "$themedir/$2"

        # validate applications before modifying
        for application in $(ls $appdir); do
            source "$appdir/$application"

            for update in "${!updates[@]}"; do
                # read color code from theme
                colorcode="${updates[$update]}"
                color="${colors[$colorcode]}"

                # compose regex and replace string
                regex="${update/DYECOLOR/$colorregex}"
                replace="${update/DYECOLOR/$color}"

                #echo "  $line_count"
                #echo "    $update"
                #echo "    $regex"
                #echo "    $replace"

                sed -i "s/$regex/$replace/" "$config"
            done

            unset config
            unset updates
        done
        ;;
    help)
        echo "$usage"
        ;;
    list)
        # validate arguments
        (( $# != 1 )) && echo "'$1' requires no arguments" && exit 1

        for theme in $(ls $themedir); do
            echo "$theme"
        done
        ;;
    validate)
        # validate arguments
        (( $# != 2 )) && echo "'$1' requires one argument" && exit 1

        [ ! -f "$themedir/$2" ] && echo "theme '$2' does not exist" && exit 1

        source "$themedir/$2"

        # validate applications before modifying
        for application in $(ls $appdir); do
            source "$appdir/$application"

            for update in "${!updates[@]}"; do
                # validate color code from theme
                colorcode="${updates[$update]}"
                [ -z "${colors[$colorcode]}" ] && echo "colorcode '$colorcode' does not exist"

                # validate regex replacement
                regex="${update/DYECOLOR/$colorregex}"

                linecount=$(grep -- "$regex" "$config" | wc -l)
                [[ $linecount != 1 ]] && echo "regex '$regex' found $linecount time(s)"
            done

            unset config
            unset updates
        done
        ;;
    version)
        echo "$version"
        ;;
    *)
        echo "$usage"
        exit 1
        ;;
esac
