#!/bin/bash
# reference - https://www.atlassian.com/git/tutorials/dotfiles
# reference - https://news.ycombinator.com/item?id=11071754

version="0.1.0"
usage="USAGE: $(basename $0) COMMAND
COMMAND:
    help                display this help menu
    clone <git-repo>    clone an existing dotfiles repository
    init                initailize a new dotfiles repository
    version             display the application version
    *                   forward arguments to git"

# load commands from library
. library.sh

# check if applications are available
! inPath git && echo "'git' not found in users PATH" && exit 1

# define instance variables
dotfilesdir="$HOME/.dotfiles"

# execute command
case "$1" in
    clone)
        # check argument length
        (( $# != 2 )) && \
            echo "the 'clone' command requires a repository" && exit 1

        # clone the remote repository
        git clone --bare $2 $dotfilesdir
        git --git-dir=$dotfilesdir config \
            --local status.showUntrackedFiles no
        echo "\ncomplete process with '$(basename $0) checkout'"
        ;;
    help)
        echo "$usage"
        ;;
    init)
        # initialize a bare repository
        git init --bare $dotfilesdir
        git --git-dir=$dotfilesdir config \
            --local status.showUntrackedFiles no
        ;;
    version)
        echo "$version"
        ;;
    *)
        # wrap arguments containing a space in double quotes
        args=()
        for arg in "$@"; do
            case "$arg" in
                *\ * )
                    args+=("\"$arg\"")

                    ;;
                * )
                    args+=($arg)

                    ;;
            esac
        done

        # execute git command
        git --git-dir=$dotfilesdir --work-tree=$HOME "${args[@]}"
        ;;
esac
