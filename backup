#!/bin/bash

version="0.1.0"
usage="USAGE: $(basename $0) COMMAND
COMMAND:
    full DIRS...            create an archive of all specified directories
    help                    display this help menu
    mod <date> DIRS...      process files modified since specified date
    version                 display the application version"

# initialize instance variables
tmpdir="/tmp"

# load configuration and command library scripts
. library.sh

# check if applications are available
! inPath tar && echo "'tar' not found in users PATH" && exit 1

validate_dirs() {
    dirs=()
    for dir in "$@"; do
        # ensure directory exists
        [ ! -d "$HOME/$dir" ] && \
            echo "directory '$HOME/$dir' does not exist" && exit 1

        dirs+=" $dir"
    done
}

# execute command
case "$1" in
    full)
        # check argument length
        (( $# < 2 )) && \
            echo "the 'full' command requires at least one argument" && exit 1

        # validate directories
        validate_dirs "${@:2}"

        # initialize instance variables
        tarfile="$tmpdir/$USER-$(hostname)-$(date +%Y%m%d%H%M)-full.tgz"

        # create a gzipped tar archive with the specified directories
        tar -czf "$tarfile" -C "$HOME" ${dirs[*]}

        #echo ${dirs[*]}
        ;;
    help)
        echo "$usage"
        exit 0
        ;;
    mod)
        # check argument length
        (( $# < 3 )) && \
            echo "the 'mod' command requires at least two arguments" && exit 1

        # validate directories
        validate_dirs "${@:3}"

        # initialize instance variables
        tarfile="$tmpdir/$USER-$(hostname)-$(date +%Y%m%d%H%M)-mod-$2.tgz"
        timestampfile="$tmpdir/backup-timestamp"
        modifiedfile="$tmpdir/modified.txt"
        homeprefixlen=$(echo "$HOME/" | wc -c)

        # create timestampfile
        touch -t $2 "$timestampfile"
        (( "$?" )) && exit 1

        # find all files modified since CHANGE_TIMESTMAP
        for dir in "${dirs[@]}"; do
            find  "$HOME/$dir" -type f -newer "$timestampfile" -print \
                | cut -c$homeprefixlen- >> "$modifiedfile"
        done

        # create a gzipped tar archive with modified files
        tar -czf "$tarfile" -C "$HOME" $(cat $modifiedfile)

        # clean up temporary files
        rm "$timestampfile" "$modifiedfile"
        ;;
    version)
        echo "$version"
        ;;
    *)
        echo "$usage"
        exit 1
        ;;
esac
